/*======================================
   ■■■ 만년 달력■■■
   - 다음과 같은 기능의 프로그램을 구현한다.
=======================================*/

//실행 예)
//『연도』를 입력하세요	: 2022
//『월』을 입력하세요	: 7

/*
	[2022년 7월]
 일 월 화 수 목 금 토 
=====================
			 	 1  2
  3  4  5  6  7  8  9
 10 11 12 13 14 15 16
 17 18 19 20 21 22 23
 24 25 26 27 28 29 30
 31

=====================
계속하려면 아무 키나 누르세요...

*/
import java.util.Scanner;
public class TTest105
{
	public static void main(String[] args)
	{
		Calander ob = new Calander();
		ob.input();
		ob.cal();
	

	}
}

// 1.우선 사용자 입력 받아와서 그날의 첫날이 무슨 요일인지 알아낼것
// 2.받아온 달의 첫날을 기준으로 달력을 만들것인데, 
//	 2월은 윤년이면 29일까지 있고 평년이면 28일까지 있음
//   그 외의 달은 {31 , ?, 31, 30, 31, 30, 31, 31, 30, 31, 30 ,31}
// 3. 첫날을 1일을 기점으로 시작해서 달력을 만들 것
// 4. 첫날은 그전년도와 그전달의 모든수를 더해서 7로 나누면 그 전요일을 알 수 있음
 

class Calander
{	
	int y,m,d;		//y는 년도를 저장하고 m은 월을 저장할건데, d가 필요한가?
	
	//사용자로부터 해당 년월을 받아올 메소드
	void input()
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("『연도』를 입력하세요 : ");
		y = sc.nextInt();
		System.out.print("『월』을 입력하세요 : ");
		m = sc.nextInt();
	}

	//받아온 년도의 전월까지 계산해서 마지막날의 요일을 결과를 도출해낼 메소드

	void cal()
	{
		//받아온 년도의 전년도까지 그리고 그 전월의 날짜의 수를 계산한다.
		int months[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
		String[] weekNames= {"일", "월", "화", "수", "목", "금", "토"};
							//0     1	  2		3	  4		5	  6
		int days;

		if ((y%4==0&&y%100!=0)||(y%400==0))
		{
			months[1] = 29;
		}

		days =(y-1)*365 + (y-1)/4 - (y-1)/100 + (y-1)*400;

		for (int i=0; i<(m-1); i++)
		{
			days += months[i];
		}
		
		int w = days % 7;
		int start = w+1;

		//return weekNames[w+1];
		
		//나머지가 곧 요일이다
		//받아온 w+1을 해서 그 요일을 토대로 달력을 만들건데 이건 배열을 활용 

		//31	- 1,3,5,7,8,10,12
		//30	- 4 6 9 11
		//28/29 - 2

		
		System.out.println("일 월 화 수 목 금 토");
		
		for (int i=0; i<=start; i++)
		{
			System.out.printf("   ");
		}

		for (int i=1; i<=months[m-1]; i++)
		{
			System.out.printf("%3d", i);
			
			if ((w+i)%7==6)
			{
				System.out.println();
			}
		}
		
		System.out.println();



	}

	/*void print()
	{
		System.out.printf("%5d년 %3d월%n", y, m);
		System.out.println("일 월 화 수 목 금 토");
		System.out.println("====================");

		System.out.println("====================");
	}
	*/


}


// 받아온 년도의 전월까지 계산해서 마지막 날 계산 도출

// 마지막날을 +1요일 해서 배열로 달력 구조 출력


/*
	[2022년 7월]
 일 월 화 수 목 금 토 
=====================
			 	 1  2
  3  4  5  6  7  8  9
 10 11 12 13 14 15 16
 17 18 19 20 21 22 23
 24 25 26 27 28 29 30
 31

=====================
계속하려면 아무 키나 누르세요...

*/

/*
	[2022년 6월]
 일 월 화 수 목 금 토 
=====================
           1  2  3  4
  5  6  7  8  9 10 11
 12 13 14 15 16 17 18
 19 20 21 22 23 24 25
 26 27 28 29 30

=====================
계속하려면 아무 키나 누르세요...

*/



		/*
		if ((m ==1) || (m==3) || (m==5) || (m==7) || (m==8) || (m==10) || (m=12))
		{
			for (i=w+1,n=1; i<(w+1)+31; i++)
			{
				System.out.printf("%3d", n);
				n++;	
			}
		}
		else if (m==4 || m==6 || m==9 || m=11)
		{
			for (i=w+1,n=1; i<(w+1)+30; i++)
			{
				System.out.printf("%3d", n);
				n++;	
			}
		}

		else if (m==2)
		{
			if ((y%4==0&&y%100!=0)||(y%400==0))
			{
				for (i=w+1,n=1; i<(w+1)+29; i++)
				{
					System.out.printf("%3d", n);
					n++;	
				}
			}
			else
				for (i=w+1,n=1; i<(w+1)+28; i++)
				{
					System.out.printf("%3d", n);
					n++;	
				}
		}
	*/