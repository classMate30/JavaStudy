/*===============================
   ■■■ 클래스와 인스턴스 ■■■
   - 클래스 설계
   - 배열의 활용
   - 접근제어지시자와 정보은닉
================================*/

// 사용자로부터 년, 월, 일을 입력받아
// 해당 날짜의 요일을 출력하는 프로그램을 구현한다.
// 단, 달력 클래스(Calendar)는 사용하지 않는다.
// 또한 클래스의 개념을 활용하여 작성할 수 있도록 한다. (→ WeekDay 클래스 설계)
// 그리고, 배열의 개념도 적용시켜 작성할 수 있도록 한다.
// 접근제어지시자의 개념도 확인하여 작성할 수 있도록 한다.
// 최종적으로...
// WeekDay 클래스 설계를 통해
// Test099 클래스의 main() 메소드가 정상적으로 프로그램 실행 될 수 있도록 한다.

// 실행 예)
// 년 월 일 입력(공백 구분) : 2022 7 15
// >> 2022년 7월 15일 → 금요일
// 계속하려면 아무 키나 누르세요...

// ※ Hint
//	  - 1년 1월 1일 → "월요일"
//	  - 1년은 365일이 아니다.
//	  - 2월의 마지막 날짜가 29일 → 윤년
//	  - 2월의 마지막 날짜가 28일 → 평년
//	  - 윤년의 판별 조건
//	    → 년도가 4의 배수이면서 100의 배수가 아니거나.
//		   400의 배수이면 윤년, 그 이외의 년도는 평년


/*

1. input 으로 값을 받아와서 올해가 윤년인지 평년인지 판별한다.
2. 받아온 해의 전까지 모든 날들을 더해준다. ex) 2022년이면 2021년까지의 모든 날들을 더해준다.
3. 받아온 달의 전까지 모든 날들을 더해준다. 윤년 평년에따라 2월의 숫자는 다르며 다른 달은 같다.
4. 받아온 날까지 날들을 더해준다.
5. 받아온 모든 날들을 7로 나눠 나머지를 구한다.
6. 나머지를 통해서 요일을 조립한다.


*/
// 같이 한 풀이

import java.util.Scanner;
class WeekDay
{	//주요 변수 선언
	private int y, m, d;			//-- 사용자가 입력한 연, 월, 일을 담아낼 변수
									//	 클래스에 선언하는 모든 변수는 private으로 구성할 것
	
	//메소드 정의 → 기능 : 연, 월, 일 입력받기
	public void input()
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("년 월 일 입력(공백 구분) : ");	//2022 7 15
		y = sc.nextInt();
		m = sc.nextInt();
		d = sc.nextInt();
	}

	//메소드 정의 → 기능 : 요일 산출하기
	public String week()
	{
		//각 월의 마지막 날짜(각 월의 최대값)	// 변수 12개 선언하는 것 보다 배열로 구성해주면 편함
		int[] months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

		//테스트
		//System.out.println(months.length);
		//--==>> 12 (0이 포함된 2월까지 12개의 달이 있는 것 확인)

		//각각 요일의 이름을 배열 형태로 구성
		String[] weekNames = {"일", "월", "화", "수", "목", "금", "토"};

		//날 수를 종합할 변수
		int nalsu;

		// 윤년에 따른 2월의 날 수 계산
		// 입력 년도가 윤년이라면... 2월의 마지막 날짜를 29일로 설정
		// 입력 년도가 평년이라면... 2월의 마지막 날짜를 28일로 설정
		if ((y%4==0 && y%100!=0) || y%400==0)	//-- 입력 년도가 윤년이라면...
		{
			//2월의 마지막 날짜를 29일로 설정
			months[1] = 29;
		}
		/*
		//0으로 설정했을때
		else									//-- 입력 년도가 평년이라면...
		{		
			//2월의 마지막 날짜를 28일로 설정
			months[1] = 28;
		}
		*/

		// ① 1년 1월 1일 부터 입력받은 년도의 이전 년도 12월 31일 까지의 날 수 계산
		//					   -------------
		//							y
		//					   -------------------------
		//								 (y-1)
	

		// 반복문 돌리는 것보다 리소스 소모 덜함...
		nalsu = (y-1) * 365 + (y-1)/4 - (y-1)/100 + (y-1)/400;
		//		-----------
		//		1년기본주기   ---------
		//					  4년마다+1 -----------
		//								100년마다+1 (X)
		//											----------
		//											400년마다+1

		// 테스트
		//System.out.println("날 수 : " + nalsu);
		//--==>> 년 월 일 입력(공백 구분) : 2022 7 15
		//		 날 수 : 738155
		//				 ------
		//				1년1월1일 ~ 2021년 12월 31까지의 총 날 수

		



		// ② 입력받은 월의 이전 월 까지의 날 수 계산 후
		//	  이 계산 결과를 1번 결과에 더하는 연산

		for (int i=0; i<(m-1); i++)
			nalsu += months[i];

		//테스트(확인)
		//System.out.println("날 수 : " + nalsu);
		//--==>>년 월 일 입력(공백 구분) : 2022 7 15
		//		날 수 : 738336
		//				------
		//				1년 1월 1일 ~ 2022년 6월 30일까지의 총 날 수


		// ③ 입력받은 일의 날짜만큼 날 수 계산 후
		//	  이 계산 결과를 2번 결과에 더하는 연산
		nalsu += d;

		//테스트
		//System.out.println("날 수 : " + nalsu);
		//--==>>년 월 일 입력(공백 구분) : 2022 7 15
		//		날 수 : 738351
		//				------
		//				1년 1월 1일 ~ 2022년 7월 15일 까지의 총 날 수


		//------------------------------------------ 여기까지 수행하면 날 수 연산 끝~!!!!
		

		//무슨 요일인지 확인하기 위한 연산
		int w = nalsu % 7;				//-- 전체날수 % 7 ==0  → 일요일
		


		//테스트
		//System.out.println("w : " + w);
		//--==>>년 월 일 입력(공백 구분) : 2022 7 15
		//		w : 5
		//			-- → 전체날수 % 7 == 5 → 금요일
	
		return weekNames[w];			//"금" 문자열 반환
	}

	//메소드 정의 → 기능 : 결과 출력하기
	public void print(String day)
	{
		System.out.printf(">> %d년 %d월 %d일 → %s요일\n", y, m, d, day);
	}
	

}

public class Test099
{
	public static void main(String[] args)
	{
		// WeekDay 클래스 기반 인스턴스 생성
		WeekDay wd = new WeekDay();

		// 입력 메소드 호출
		wd.input();
		
		// 요일 산출 메소드 호출
		String result = wd.week();

		// 최종 결과 출력 메소드 호출
		wd.print(result);
		

	}
}
/*
import java.util.Scanner;
class WeekDay
{
	//년,월,일을 초기값으로 1년 1월 1일으로 잡고, "월요일"로 설정해줘야하는데,
	private int year=1, month=1, date=1, calSum=0, calYear=0, calDate=0;
	String type
	

	void input()
	{
		Scanner sc = new Scanner(System.in);
		year = sc.nextInt();
		month = sc.nextInt();
		date = sc.nextInt();

		if ()
		{
		}
	}

	int calD(int date)
	{ 
		calDate +=(date-1);
		return calDate;
	}

	int calY(int year)
	{
		

	}

	int calM(int month)
	{
		
	}
		

}
	



public class Test099
{
	public static void main(String[] args)
	{
		
	}
}
*/