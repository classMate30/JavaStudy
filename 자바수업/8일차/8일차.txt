switch의 수식은 (byte short int long이어야한다 정수형태)
+ 문자 타입(char) JDK 1.7이후 
+ 문자열(String)

break;
멈춘다~ (+ 그리고 빠져나가라)

continue;
(뒷 부분 무시하고 +) 계속해라~

return ???;
값의 반환 (+ 메소드 종료)
return문을 만나면, return문의 주인이 누구인지 찾아야 한다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
반복문
for, while 그리고 do ~ while

□ 자바 이외의 다른 언어들도 다양한 형태의 반복문들을 가지고 있다.

□ while 문이나 for 문이나 모두 통용될 수 있게 작성이 가능함.
	그러나, 때에 따라 조금 더 적합한 반복문이 있음 (식칼로 과일을 깎거나, 과도로 고기를 손질하는 거랑 같은 논리, 적합한게 존재)
	상황에 따라 활용하는 법을 익히는 것이 핵심

□ for 문은 처음에 낯설고 어려울 순 있지만 시간이 흐를 수록 활용도가 높으니 익숙해지도록 노력
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
while(조건식) //if랑 똑같이 생겼음, 조건식도 마찬가지로 true or false //조건식 : 반복 조건
{
	실행 영역; //조건식이 거짓이 나올때까지 실행 끈질기게 확인함. 
}

if(조건식)
{
	실행 영역; //참이면 수행
}
//거짓이면 쿨하게 빠져나감
--------------------------------------------------------------------------------------
while(2 < 3) // 
{
	실행 영역; //조건식이 계속 true라면 무한 반복 시켜버림(반복문이 끝나지 않고 실행)
}

while(i < 3) // true or false 
{
	실행 영역; 
	i++;		//일반적으로 반복을 깨지게 하는 수식이 존재함
}

	★while 문은 조건이 안맞으면 한번도 수행을 안할 수 있음★
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

do ~ While 문 『일단 한번 잡숴봐』 
한번 먹어보고 맛있으면 물릴때까지 계속 먹음 / 아무리 싫어도 한번 먹어보고 맛없으면 안먹음.
- 일단 무조건 한번은 해보는 반복문
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

for 문
for(int num = 0; num <5; num++)
□	반복문의 수행과정에 관여하는 변수들을 루프변수라고 한다.
	루프 변수를 선언하고, 루프변수를 초기화 함. 안에 쓰이는 루프 변수가 직관적으로 바로 보인다.
□	조건을 확인함
	★조건에 맞지 않으면 for 문도 한번도 실행 안할 수 있음★
□ 증감식을 통해 반복문 벗어나게 설정
□ 1 2 3 4순으로 돌린후 그 후는 234 234 234순으로 가다가 2에서 조건을 확인하고 false가 나오면 빠져나감
	ex) for( num=0; num<5; num++)
		 {	  -----  -----  -----
				1		2		4
			System.out.println("...");
				----------------
						3
		 }

이번주도 하루하루 너무 즐거웠습니다 감사합니다
좋은 주말들 보내세요~
